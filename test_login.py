"""
Pruebas de login y navegaci√≥n del sistema SMA
"""
import requests
from bs4 import BeautifulSoup
import time

BASE_URL = 'http://127.0.0.1:8000'

def login_and_test():
    """Hacer login y probar navegaci√≥n"""
    session = requests.Session()
    
    print("üîê PROBANDO LOGIN...")
    
    # Obtener p√°gina de login
    login_url = f'{BASE_URL}/login/'
    response = session.get(login_url)
    
    if response.status_code != 200:
        print(f"‚ùå Error al acceder al login: {response.status_code}")
        return False
    
    print("‚úÖ P√°gina de login accesible")
    
    # Extraer CSRF token
    soup = BeautifulSoup(response.content, 'html.parser')
    csrf_token = soup.find('input', {'name': 'csrfmiddlewaretoken'})
    
    if not csrf_token:
        print("‚ùå CSRF token no encontrado")
        return False
    
    print("‚úÖ CSRF token encontrado")
    
    # Hacer login
    login_data = {
        'username': 'admin',
        'password': 'admin123',
        'csrfmiddlewaretoken': csrf_token['value']
    }
    
    response = session.post(login_url, data=login_data, allow_redirects=True)
    
    # Verificar login exitoso
    if 'login' in response.url:
        print("‚ùå Login fallido - a√∫n en p√°gina de login")
        return False
    
    print("‚úÖ Login exitoso")
    
    # Probar p√°ginas autenticadas
    print("\nüè† PROBANDO NAVEGACI√ìN AUTENTICADA...")
    
    pages_to_test = [
        ('/horarios/', 'Sistema de horarios'),
        ('/cursos/', 'Lista de cursos'),
        ('/calendario/', 'Calendario'),
        ('/asignaturas/', 'Lista de asignaturas'),
        ('/profesores/', 'Lista de profesores'),
        ('/estudiantes/listar/', 'Lista de estudiantes'),
    ]
    
    for url, description in pages_to_test:
        try:
            response = session.get(f'{BASE_URL}{url}', timeout=10)
            if response.status_code == 200:
                print(f"‚úÖ {url:<25} | {description}")
                
                # Verificar contenido espec√≠fico
                if 'horarios' in url and 'Gesti√≥n de Horarios' in response.text:
                    print("   üéØ Contenido de horarios verificado")
                elif 'cursos' in url and ('curso' in response.text.lower() or 'Curso' in response.text):
                    print("   üéØ Contenido de cursos verificado")
                elif 'calendario' in url and ('calendario' in response.text.lower() or 'evento' in response.text.lower()):
                    print("   üéØ Contenido de calendario verificado")
                elif 'asignaturas' in url and ('asignatura' in response.text.lower() or 'Asignatura' in response.text):
                    print("   üéØ Contenido de asignaturas verificado")
            else:
                print(f"‚ùå {url:<25} | Status: {response.status_code}")
        except Exception as e:
            print(f"‚ùå {url:<25} | Error: {e}")
    
    # Probar sistema de horarios espec√≠fico
    print("\nüìÖ PROBANDO SISTEMA DE HORARIOS ESPEC√çFICO...")
    try:
        # Probar gesti√≥n de horarios de un curso espec√≠fico
        horarios_curso_url = f'{BASE_URL}/cursos/16/horarios/'
        response = session.get(horarios_curso_url, timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ Gesti√≥n de horarios de curso espec√≠fico funciona")
            if 'Gesti√≥n de Horarios' in response.text:
                print("   üéØ Contenido espec√≠fico de gesti√≥n verificado")
        else:
            print(f"‚ùå Gesti√≥n de horarios fall√≥: {response.status_code}")
    except Exception as e:
        print(f"‚ùå Error en gesti√≥n de horarios: {e}")
    
    return True

def main():
    print("=" * 80)
    print("PRUEBAS DE LOGIN Y NAVEGACI√ìN - SISTEMA SMA")
    print("=" * 80)
    
    try:
        # Verificar que beautifulsoup est√© disponible
        import bs4
        
        success = login_and_test()
        
        if success:
            print("\nüéâ TODAS LAS PRUEBAS EXITOSAS")
            print("‚úÖ El sistema est√° completamente funcional")
            print("‚úÖ Login funciona correctamente")
            print("‚úÖ Navegaci√≥n autenticada funciona")
            print("‚úÖ Sistema de horarios operativo")
            
            print("\nüìù INSTRUCCIONES PARA EL USUARIO:")
            print("1. Ir a: http://127.0.0.1:8000/login/")
            print("2. Usuario: admin")
            print("3. Contrase√±a: admin123")
            print("4. Despu√©s del login, navegar a:")
            print("   - /horarios/ para gesti√≥n de horarios")
            print("   - /cursos/ para gesti√≥n de cursos")
            print("   - /calendario/ para el calendario")
            print("   - /asignaturas/ para gesti√≥n de asignaturas")
        else:
            print("\n‚ùå ALGUNAS PRUEBAS FALLARON")
            
    except ImportError:
        print("‚ùå BeautifulSoup no est√° instalado")
        print("Instalar con: pip install beautifulsoup4")
    
    print("\n" + "=" * 80)

if __name__ == "__main__":
    main()
